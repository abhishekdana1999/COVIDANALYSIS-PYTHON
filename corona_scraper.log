2020-04-11 14:14:48,302 - <ipython-input-1-2e5132ef0945> -  INFO - Execution begins  
2020-04-11 14:14:49,671 - <ipython-input-1-2e5132ef0945> -  ERROR - Error in extraction of the table from website - https://data.gov.in/major-indicator/covid-19-india-data-source-mohfw 
Traceback (most recent call last):
  File "<ipython-input-1-2e5132ef0945>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 891, in _parse
    parser = _parser_dispatch(flav)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 840, in _parser_dispatch
    raise ImportError("html5lib not found, please install it")
ImportError: html5lib not found, please install it
2020-04-11 14:14:49,717 - <ipython-input-1-2e5132ef0945> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-1-2e5132ef0945>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 14:14:49,719 - <ipython-input-1-2e5132ef0945> -  INFO - Execution sucessfully completed 
2020-04-11 14:15:57,996 - <ipython-input-2-f4b0ce3a6cd1> -  INFO - Execution begins  
2020-04-11 14:15:58,155 - <ipython-input-2-f4b0ce3a6cd1> -  ERROR - Error in extraction of the table from website - https://data.gov.in/major-indicator/covid-19-india-data-source-mohfw 
Traceback (most recent call last):
  File "<ipython-input-2-f4b0ce3a6cd1>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 891, in _parse
    parser = _parser_dispatch(flav)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 840, in _parser_dispatch
    raise ImportError("html5lib not found, please install it")
ImportError: html5lib not found, please install it
2020-04-11 14:15:58,156 - <ipython-input-2-f4b0ce3a6cd1> -  DEBUG - The file already exists. 
2020-04-11 14:15:58,157 - <ipython-input-2-f4b0ce3a6cd1> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-2-f4b0ce3a6cd1>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 14:15:58,157 - <ipython-input-2-f4b0ce3a6cd1> -  INFO - Execution sucessfully completed 
2020-04-11 14:17:07,698 - <ipython-input-3-f833aea3bbbb> -  INFO - Execution begins  
2020-04-11 14:17:08,744 - <ipython-input-3-f833aea3bbbb> -  DEBUG - The file already exists. 
2020-04-11 14:17:08,762 - <ipython-input-3-f833aea3bbbb> -  INFO - Execution sucessfully completed 
2020-04-11 19:09:44,714 - <ipython-input-4-f833aea3bbbb> -  INFO - Execution begins  
2020-04-11 19:09:46,140 - <ipython-input-4-f833aea3bbbb> -  DEBUG - The file already exists. 
2020-04-11 19:09:46,248 - <ipython-input-4-f833aea3bbbb> -  INFO - Execution sucessfully completed 
2020-04-11 19:25:47,497 - <ipython-input-9-7394b4ae1193> -  INFO - Execution begins  
2020-04-11 19:25:48,747 - <ipython-input-9-7394b4ae1193> -  DEBUG - The file already exists. 
2020-04-11 19:25:48,753 - <ipython-input-9-7394b4ae1193> -  INFO - Execution sucessfully completed 
2020-04-11 19:26:50,497 - <ipython-input-10-7394b4ae1193> -  INFO - Execution begins  
2020-04-11 19:26:58,406 - <ipython-input-10-7394b4ae1193> -  ERROR - Error in extraction of the table from website - https://www.grainmart.in/news/coronavirus-covd-19-live-cases-tracker-john-hopkins 
Traceback (most recent call last):
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1319, in do_open
    h.request(req.get_method(), req.selector, req.data, headers,
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1230, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1276, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1225, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1004, in _send_output
    self.send(msg)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 944, in send
    self.connect()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1392, in connect
    super().connect()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 915, in connect
    self.sock = self._create_connection(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\socket.py", line 787, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<ipython-input-10-7394b4ae1193>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 895, in _parse
    tables = p.parse_tables()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 213, in parse_tables
    tables = self._parse_tables(self._build_doc(), self.match, self.attrs)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 733, in _build_doc
    raise e
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 714, in _build_doc
    with urlopen(self.io) as f:
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\common.py", line 141, in urlopen
    return urllib.request.urlopen(*args, **kwargs)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 222, in urlopen
    return opener.open(url, data, timeout)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 525, in open
    response = self._open(req, data)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 542, in _open
    result = self._call_chain(self.handle_open, protocol, protocol +
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 502, in _call_chain
    result = func(*args)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1362, in https_open
    return self.do_open(http.client.HTTPSConnection, req,
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1322, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [Errno 11001] getaddrinfo failed>
2020-04-11 19:26:59,093 - <ipython-input-10-7394b4ae1193> -  DEBUG - The file already exists. 
2020-04-11 19:26:59,094 - <ipython-input-10-7394b4ae1193> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-10-7394b4ae1193>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 19:26:59,096 - <ipython-input-10-7394b4ae1193> -  INFO - Execution sucessfully completed 
2020-04-11 19:27:21,004 - <ipython-input-11-7394b4ae1193> -  INFO - Execution begins  
2020-04-11 19:27:21,639 - <ipython-input-11-7394b4ae1193> -  INFO - Execution sucessfully completed 
2020-04-11 19:28:30,202 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\jedi\third_party\typeshed\stdlib\2and3\builtins.pyi 
2020-04-11 19:28:30,234 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\jedi\third_party\typeshed\stdlib\3\sys.pyi 
2020-04-11 19:28:30,396 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:28:30,397 - diff.py -  DEBUG - line_lengths old: 26; new: 26 
2020-04-11 19:28:30,398 - diff.py -  DEBUG - -> code[equal] old[1:25] new[1:25] 
2020-04-11 19:28:30,399 - diff.py -  DEBUG - copy old[1:19] new[1:19] 
2020-04-11 19:28:30,401 - diff.py -  DEBUG - parse_part from 20 to 26 (to 25 in part parser) 
2020-04-11 19:28:30,402 - diff.py -  DEBUG - -> code[replace] old[26:26] new[26:26] 
2020-04-11 19:28:30,403 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:28:30,544 - <ipython-input-12-8c2b556a43cf> -  INFO - Execution begins  
2020-04-11 19:28:31,140 - <ipython-input-12-8c2b556a43cf> -  DEBUG -                                                   0            1  \
0   CORONAVIRUS COVID-19 Total Cases Tally in India         7976   
1                              State Wise Breakdown  Total Cases   
2                                       Maharashtra         1666   
3                                        Tamil Nadu          911   
4                                             Delhi          903   
5                                       Rajasthan**          678   
6                                         Telangana          487   
7                                    Madhya Pradesh          465   
8                                     Uttar Pradesh          448   
9                                           Gujarat          432   
10                                   Andhra Pradesh          405   
11                                           Kerala          374   
12                                Jammu and Kashmir          224   
13                                        Karnataka          214   
14                                       Haryana***          183   
15                                           Punjab          158   
16                                    West Bengal**          122   
17                                            Bihar           61   
18                                           Odisha           50   
19                                      Uttarakhand           35   
20                                 Himachal Pradesh           30   
21                                            Assam           29   
22                                       Chandigarh           19   
23                                     Chhattisgarh           18   
24                                        Jharkhand           17   
25                                           Ladakh           15   
26                      Andaman and Nicobar Islands           11   
27                                              Goa            7   
28                                       Puducherry            7   
29                                          Manipur            2   
30                                          Tripura            2   
31                                Arunachal Pradesh            1   
32                           Dadra and Nagar Haveli            1   
33                                          Mizoram            1   
34                                            Total         7976   

               2       3      4  
0           6892     260   824*  
1   Active Cases  Deaths  Cured  
2           1369     109    188  
3            858       9     44  
4            862      14     27  
5            611       7     60  
6            430      12     45  
7            397      39     29  
8            412       4     32  
9            379      19     34  
10           388       6     11  
11           228       3    143  
12           214       4      6  
13           171       6     37  
14           131       2     50  
15           126      12     20  
16            95       8     19  
17            45       1     15  
18            37       1     12  
19            26       0      9  
20            26       2      2  
21            28       1      0  
22            12       0      7  
23             8       0     10  
24            16       1      0  
25             4       0     11  
26             1       0     10  
27             6       0      1  
28             6       0      1  
29             1       0      1  
30             2       0      0  
31             1       0      0  
32             1       0      0  
33             1       0      0  
34          6892     260    824   
2020-04-11 19:28:31,195 - <ipython-input-12-8c2b556a43cf> -  DEBUG - The file already exists. 
2020-04-11 19:28:31,197 - <ipython-input-12-8c2b556a43cf> -  INFO - Execution sucessfully completed 
2020-04-11 19:29:49,036 - <ipython-input-13-376250592dde> -  INFO - Execution begins  
2020-04-11 19:29:49,925 - <ipython-input-13-376250592dde> -  DEBUG -                                                   0            1  \
0   CORONAVIRUS COVID-19 Total Cases Tally in India         7976   
1                              State Wise Breakdown  Total Cases   
2                                       Maharashtra         1666   
3                                        Tamil Nadu          911   
4                                             Delhi          903   
5                                       Rajasthan**          678   
6                                         Telangana          487   
7                                    Madhya Pradesh          465   
8                                     Uttar Pradesh          448   
9                                           Gujarat          432   
10                                   Andhra Pradesh          405   
11                                           Kerala          374   
12                                Jammu and Kashmir          224   
13                                        Karnataka          214   
14                                       Haryana***          183   
15                                           Punjab          158   
16                                    West Bengal**          122   
17                                            Bihar           61   
18                                           Odisha           50   
19                                      Uttarakhand           35   
20                                 Himachal Pradesh           30   
21                                            Assam           29   
22                                       Chandigarh           19   
23                                     Chhattisgarh           18   
24                                        Jharkhand           17   
25                                           Ladakh           15   
26                      Andaman and Nicobar Islands           11   
27                                              Goa            7   
28                                       Puducherry            7   
29                                          Manipur            2   
30                                          Tripura            2   
31                                Arunachal Pradesh            1   
32                           Dadra and Nagar Haveli            1   
33                                          Mizoram            1   
34                                            Total         7976   

               2       3      4  
0           6892     260   824*  
1   Active Cases  Deaths  Cured  
2           1369     109    188  
3            858       9     44  
4            862      14     27  
5            611       7     60  
6            430      12     45  
7            397      39     29  
8            412       4     32  
9            379      19     34  
10           388       6     11  
11           228       3    143  
12           214       4      6  
13           171       6     37  
14           131       2     50  
15           126      12     20  
16            95       8     19  
17            45       1     15  
18            37       1     12  
19            26       0      9  
20            26       2      2  
21            28       1      0  
22            12       0      7  
23             8       0     10  
24            16       1      0  
25             4       0     11  
26             1       0     10  
27             6       0      1  
28             6       0      1  
29             1       0      1  
30             2       0      0  
31             1       0      0  
32             1       0      0  
33             1       0      0  
34          6892     260    824   
2020-04-11 19:29:49,937 - <ipython-input-13-376250592dde> -  ERROR - Error in extraction of the table from website - https://www.grainmart.in/news/coronavirus-covd-19-live-cases-tracker-john-hopkins 
Traceback (most recent call last):
  File "<ipython-input-13-376250592dde>", line 31, in extract_website_data
    corona_table.columns = [
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\core\generic.py", line 5287, in __setattr__
    return object.__setattr__(self, name, value)
  File "pandas\_libs\properties.pyx", line 67, in pandas._libs.properties.AxisProperty.__set__
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\core\generic.py", line 661, in _set_axis
    self._data.set_axis(axis, labels)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\core\internals\managers.py", line 177, in set_axis
    raise ValueError(
ValueError: Length mismatch: Expected axis has 4 elements, new values have 5 elements
2020-04-11 19:29:50,150 - <ipython-input-13-376250592dde> -  DEBUG - The file already exists. 
2020-04-11 19:29:50,151 - <ipython-input-13-376250592dde> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-13-376250592dde>", line 68, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 19:29:50,152 - <ipython-input-13-376250592dde> -  INFO - Execution sucessfully completed 
2020-04-11 19:30:02,704 - <ipython-input-14-7394b4ae1193> -  INFO - Execution begins  
2020-04-11 19:30:03,262 - <ipython-input-14-7394b4ae1193> -  DEBUG - The file already exists. 
2020-04-11 19:30:03,266 - <ipython-input-14-7394b4ae1193> -  INFO - Execution sucessfully completed 
2020-04-11 19:41:44,664 - <ipython-input-15-037168616d18> -  INFO - Execution begins  
2020-04-11 19:41:45,009 - <ipython-input-15-037168616d18> -  ERROR - Error in extraction of the table from website - https://www.grainmart.in/news/india-coronavirus-state-wise-tally-live-interactive-map/ 
Traceback (most recent call last):
  File "<ipython-input-15-037168616d18>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 891, in _parse
    parser = _parser_dispatch(flav)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 840, in _parser_dispatch
    raise ImportError("html5lib not found, please install it")
ImportError: html5lib not found, please install it
2020-04-11 19:41:45,010 - <ipython-input-15-037168616d18> -  DEBUG - The file already exists. 
2020-04-11 19:41:45,011 - <ipython-input-15-037168616d18> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-15-037168616d18>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 19:41:45,012 - <ipython-input-15-037168616d18> -  INFO - Execution sucessfully completed 
2020-04-11 19:49:47,342 - <ipython-input-16-631f750335c6> -  INFO - Execution begins  
2020-04-11 19:49:49,111 - <ipython-input-16-631f750335c6> -  ERROR - Error in extraction of the table from website - https://www.mygov.in/corona-data/covid19-statewise-status 
Traceback (most recent call last):
  File "<ipython-input-16-631f750335c6>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 891, in _parse
    parser = _parser_dispatch(flav)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 840, in _parser_dispatch
    raise ImportError("html5lib not found, please install it")
ImportError: html5lib not found, please install it
2020-04-11 19:49:49,112 - <ipython-input-16-631f750335c6> -  DEBUG - The file already exists. 
2020-04-11 19:49:49,113 - <ipython-input-16-631f750335c6> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-16-631f750335c6>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 19:49:49,115 - <ipython-input-16-631f750335c6> -  INFO - Execution sucessfully completed 
2020-04-11 19:50:02,862 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:50:02,863 - diff.py -  DEBUG - line_lengths old: 26; new: 26 
2020-04-11 19:50:02,864 - diff.py -  DEBUG - -> code[equal] old[1:25] new[1:25] 
2020-04-11 19:50:02,865 - diff.py -  DEBUG - copy old[1:19] new[1:19] 
2020-04-11 19:50:02,867 - diff.py -  DEBUG - parse_part from 20 to 26 (to 25 in part parser) 
2020-04-11 19:50:02,868 - diff.py -  DEBUG - -> code[replace] old[26:26] new[26:26] 
2020-04-11 19:50:02,870 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:50:03,996 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:50:03,997 - diff.py -  DEBUG - line_lengths old: 26; new: 26 
2020-04-11 19:50:03,998 - diff.py -  DEBUG - -> code[equal] old[1:25] new[1:25] 
2020-04-11 19:50:03,999 - diff.py -  DEBUG - copy old[1:19] new[1:19] 
2020-04-11 19:50:04,002 - diff.py -  DEBUG - parse_part from 20 to 26 (to 25 in part parser) 
2020-04-11 19:50:04,003 - diff.py -  DEBUG - -> code[replace] old[26:26] new[26:26] 
2020-04-11 19:50:04,004 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:50:06,157 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:50:06,158 - diff.py -  DEBUG - line_lengths old: 26; new: 26 
2020-04-11 19:50:06,159 - diff.py -  DEBUG - -> code[equal] old[1:25] new[1:25] 
2020-04-11 19:50:06,160 - diff.py -  DEBUG - copy old[1:19] new[1:19] 
2020-04-11 19:50:06,163 - diff.py -  DEBUG - parse_part from 20 to 26 (to 25 in part parser) 
2020-04-11 19:50:06,164 - diff.py -  DEBUG - -> code[replace] old[26:26] new[26:26] 
2020-04-11 19:50:06,165 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:50:07,712 - <ipython-input-17-da8e9ebdbda1> -  INFO - Execution begins  
2020-04-11 19:50:09,447 - <ipython-input-17-da8e9ebdbda1> -  ERROR - Error in extraction of the table from website - https://www.mygov.in/corona-data/covid19-statewise-status 
Traceback (most recent call last):
  File "<ipython-input-17-da8e9ebdbda1>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 891, in _parse
    parser = _parser_dispatch(flav)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 840, in _parser_dispatch
    raise ImportError("html5lib not found, please install it")
ImportError: html5lib not found, please install it
2020-04-11 19:50:09,451 - <ipython-input-17-da8e9ebdbda1> -  DEBUG - The file already exists. 
2020-04-11 19:50:09,454 - <ipython-input-17-da8e9ebdbda1> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-17-da8e9ebdbda1>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 19:50:09,457 - <ipython-input-17-da8e9ebdbda1> -  INFO - Execution sucessfully completed 
2020-04-11 19:50:31,847 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:50:31,848 - diff.py -  DEBUG - line_lengths old: 26; new: 26 
2020-04-11 19:50:31,849 - diff.py -  DEBUG - -> code[equal] old[1:25] new[1:25] 
2020-04-11 19:50:31,850 - diff.py -  DEBUG - copy old[1:19] new[1:19] 
2020-04-11 19:50:31,852 - diff.py -  DEBUG - parse_part from 20 to 26 (to 25 in part parser) 
2020-04-11 19:50:31,853 - diff.py -  DEBUG - -> code[replace] old[26:26] new[26:26] 
2020-04-11 19:50:31,854 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:50:36,065 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:50:36,067 - diff.py -  DEBUG - line_lengths old: 26; new: 26 
2020-04-11 19:50:36,071 - diff.py -  DEBUG - -> code[equal] old[1:25] new[1:25] 
2020-04-11 19:50:36,073 - diff.py -  DEBUG - copy old[1:19] new[1:19] 
2020-04-11 19:50:36,076 - diff.py -  DEBUG - parse_part from 20 to 26 (to 25 in part parser) 
2020-04-11 19:50:36,077 - diff.py -  DEBUG - -> code[replace] old[26:26] new[26:26] 
2020-04-11 19:50:36,078 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:50:48,646 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:50:48,648 - diff.py -  DEBUG - line_lengths old: 26; new: 26 
2020-04-11 19:50:48,648 - diff.py -  DEBUG - -> code[equal] old[1:25] new[1:25] 
2020-04-11 19:50:48,650 - diff.py -  DEBUG - copy old[1:19] new[1:19] 
2020-04-11 19:50:48,651 - diff.py -  DEBUG - parse_part from 20 to 26 (to 25 in part parser) 
2020-04-11 19:50:48,652 - diff.py -  DEBUG - -> code[replace] old[26:26] new[26:26] 
2020-04-11 19:50:48,653 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:50:49,574 - <ipython-input-18-7a3fc953de13> -  INFO - Execution begins  
2020-04-11 19:51:00,618 - <ipython-input-18-7a3fc953de13> -  ERROR - Error in extraction of the table from website - https://www.mygov.in/corona-data/covid19-statewise-status 
Traceback (most recent call last):
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1319, in do_open
    h.request(req.get_method(), req.selector, req.data, headers,
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1230, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1276, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1225, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1004, in _send_output
    self.send(msg)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 944, in send
    self.connect()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1392, in connect
    super().connect()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 915, in connect
    self.sock = self._create_connection(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\socket.py", line 787, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<ipython-input-18-7a3fc953de13>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 895, in _parse
    tables = p.parse_tables()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 213, in parse_tables
    tables = self._parse_tables(self._build_doc(), self.match, self.attrs)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 733, in _build_doc
    raise e
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 714, in _build_doc
    with urlopen(self.io) as f:
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\common.py", line 141, in urlopen
    return urllib.request.urlopen(*args, **kwargs)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 222, in urlopen
    return opener.open(url, data, timeout)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 525, in open
    response = self._open(req, data)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 542, in _open
    result = self._call_chain(self.handle_open, protocol, protocol +
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 502, in _call_chain
    result = func(*args)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1362, in https_open
    return self.do_open(http.client.HTTPSConnection, req,
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1322, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [Errno 11001] getaddrinfo failed>
2020-04-11 19:51:00,627 - <ipython-input-18-7a3fc953de13> -  DEBUG - The file already exists. 
2020-04-11 19:51:00,629 - <ipython-input-18-7a3fc953de13> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-18-7a3fc953de13>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 19:51:00,631 - <ipython-input-18-7a3fc953de13> -  INFO - Execution sucessfully completed 
2020-04-11 19:51:24,184 - <ipython-input-19-631f750335c6> -  INFO - Execution begins  
2020-04-11 19:51:35,224 - <ipython-input-19-631f750335c6> -  ERROR - Error in extraction of the table from website - https://www.mygov.in/corona-data/covid19-statewise-status 
Traceback (most recent call last):
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1319, in do_open
    h.request(req.get_method(), req.selector, req.data, headers,
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1230, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1276, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1225, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1004, in _send_output
    self.send(msg)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 944, in send
    self.connect()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 1392, in connect
    super().connect()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\http\client.py", line 915, in connect
    self.sock = self._create_connection(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\socket.py", line 787, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11001] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<ipython-input-19-631f750335c6>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 895, in _parse
    tables = p.parse_tables()
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 213, in parse_tables
    tables = self._parse_tables(self._build_doc(), self.match, self.attrs)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 733, in _build_doc
    raise e
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 714, in _build_doc
    with urlopen(self.io) as f:
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\common.py", line 141, in urlopen
    return urllib.request.urlopen(*args, **kwargs)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 222, in urlopen
    return opener.open(url, data, timeout)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 525, in open
    response = self._open(req, data)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 542, in _open
    result = self._call_chain(self.handle_open, protocol, protocol +
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 502, in _call_chain
    result = func(*args)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1362, in https_open
    return self.do_open(http.client.HTTPSConnection, req,
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\urllib\request.py", line 1322, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [Errno 11001] getaddrinfo failed>
2020-04-11 19:51:35,227 - <ipython-input-19-631f750335c6> -  DEBUG - The file already exists. 
2020-04-11 19:51:35,227 - <ipython-input-19-631f750335c6> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-19-631f750335c6>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 19:51:35,229 - <ipython-input-19-631f750335c6> -  INFO - Execution sucessfully completed 
2020-04-11 19:55:21,680 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:55:21,681 - diff.py -  DEBUG - line_lengths old: 26; new: 86 
2020-04-11 19:55:21,682 - diff.py -  DEBUG - -> code[replace] old[1:3] new[1:3] 
2020-04-11 19:55:21,683 - diff.py -  DEBUG - parse_part from 1 to 84 (to 84 in part parser) 
2020-04-11 19:55:21,684 - diff.py -  DEBUG - -> code[equal] old[4:4] new[4:4] 
2020-04-11 19:55:21,685 - diff.py -  DEBUG - -> code[replace] old[5:6] new[5:6] 
2020-04-11 19:55:21,686 - diff.py -  DEBUG - -> code[equal] old[7:7] new[7:7] 
2020-04-11 19:55:21,687 - diff.py -  DEBUG - -> code[replace] old[8:8] new[8:8] 
2020-04-11 19:55:21,687 - diff.py -  DEBUG - -> code[equal] old[9:10] new[9:10] 
2020-04-11 19:55:21,688 - diff.py -  DEBUG - -> code[replace] old[11:19] new[11:19] 
2020-04-11 19:55:21,689 - diff.py -  DEBUG - -> code[equal] old[20:20] new[20:20] 
2020-04-11 19:55:21,690 - diff.py -  DEBUG - -> code[replace] old[21:26] new[21:86] 
2020-04-11 19:55:21,691 - diff.py -  DEBUG - parse_part from 85 to 86 (to 85 in part parser) 
2020-04-11 19:55:21,694 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:55:29,180 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:55:29,181 - diff.py -  DEBUG - line_lengths old: 86; new: 86 
2020-04-11 19:55:29,182 - diff.py -  DEBUG - -> code[equal] old[1:85] new[1:85] 
2020-04-11 19:55:29,183 - diff.py -  DEBUG - copy old[84:85] new[1:85] 
2020-04-11 19:55:29,184 - diff.py -  DEBUG - -> code[replace] old[86:86] new[86:86] 
2020-04-11 19:55:29,185 - diff.py -  DEBUG - parse_part from 86 to 86 (to 85 in part parser) 
2020-04-11 19:55:29,185 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:55:32,901 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:55:32,902 - diff.py -  DEBUG - line_lengths old: 86; new: 86 
2020-04-11 19:55:32,903 - diff.py -  DEBUG - -> code[equal] old[1:85] new[1:85] 
2020-04-11 19:55:32,904 - diff.py -  DEBUG - copy old[84:85] new[1:85] 
2020-04-11 19:55:32,905 - diff.py -  DEBUG - -> code[replace] old[86:86] new[86:86] 
2020-04-11 19:55:32,906 - diff.py -  DEBUG - parse_part from 86 to 86 (to 85 in part parser) 
2020-04-11 19:55:32,907 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:55:34,321 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:55:34,322 - diff.py -  DEBUG - line_lengths old: 86; new: 86 
2020-04-11 19:55:34,323 - diff.py -  DEBUG - -> code[equal] old[1:85] new[1:85] 
2020-04-11 19:55:34,324 - diff.py -  DEBUG - copy old[84:85] new[1:85] 
2020-04-11 19:55:34,325 - diff.py -  DEBUG - -> code[replace] old[86:86] new[86:86] 
2020-04-11 19:55:34,326 - diff.py -  DEBUG - parse_part from 86 to 87 (to 85 in part parser) 
2020-04-11 19:55:34,327 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:55:37,738 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:55:37,743 - diff.py -  DEBUG - line_lengths old: 86; new: 86 
2020-04-11 19:55:37,747 - diff.py -  DEBUG - -> code[equal] old[1:85] new[1:85] 
2020-04-11 19:55:37,749 - diff.py -  DEBUG - copy old[84:85] new[1:85] 
2020-04-11 19:55:37,751 - diff.py -  DEBUG - -> code[replace] old[86:86] new[86:86] 
2020-04-11 19:55:37,753 - diff.py -  DEBUG - parse_part from 86 to 86 (to 85 in part parser) 
2020-04-11 19:55:37,754 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:55:41,532 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:55:41,533 - diff.py -  DEBUG - line_lengths old: 86; new: 86 
2020-04-11 19:55:41,534 - diff.py -  DEBUG - -> code[equal] old[1:85] new[1:85] 
2020-04-11 19:55:41,535 - diff.py -  DEBUG - copy old[84:85] new[1:85] 
2020-04-11 19:55:41,537 - diff.py -  DEBUG - -> code[replace] old[86:86] new[86:86] 
2020-04-11 19:55:41,538 - diff.py -  DEBUG - parse_part from 86 to 87 (to 85 in part parser) 
2020-04-11 19:55:41,540 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:55:45,405 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:55:45,407 - diff.py -  DEBUG - line_lengths old: 86; new: 86 
2020-04-11 19:55:45,408 - diff.py -  DEBUG - -> code[equal] old[1:85] new[1:85] 
2020-04-11 19:55:45,409 - diff.py -  DEBUG - copy old[84:85] new[1:85] 
2020-04-11 19:55:45,410 - diff.py -  DEBUG - -> code[replace] old[86:86] new[86:86] 
2020-04-11 19:55:45,411 - diff.py -  DEBUG - parse_part from 86 to 86 (to 85 in part parser) 
2020-04-11 19:55:45,412 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:58:51,091 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:58:51,092 - diff.py -  DEBUG - line_lengths old: 86; new: 87 
2020-04-11 19:58:51,093 - diff.py -  DEBUG - -> code[equal] old[1:85] new[1:85] 
2020-04-11 19:58:51,094 - diff.py -  DEBUG - copy old[84:85] new[1:85] 
2020-04-11 19:58:51,095 - diff.py -  DEBUG - -> code[replace] old[86:86] new[86:87] 
2020-04-11 19:58:51,096 - diff.py -  DEBUG - parse_part from 86 to 87 (to 86 in part parser) 
2020-04-11 19:58:51,097 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:58:58,603 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:58:58,604 - diff.py -  DEBUG - line_lengths old: 87; new: 87 
2020-04-11 19:58:58,605 - diff.py -  DEBUG - -> code[equal] old[1:86] new[1:86] 
2020-04-11 19:58:58,606 - diff.py -  DEBUG - copy old[84:86] new[1:86] 
2020-04-11 19:58:58,607 - diff.py -  DEBUG - -> code[replace] old[87:87] new[87:87] 
2020-04-11 19:58:58,608 - diff.py -  DEBUG - parse_part from 87 to 87 (to 86 in part parser) 
2020-04-11 19:58:58,609 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:59:00,446 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:59:00,448 - diff.py -  DEBUG - line_lengths old: 87; new: 87 
2020-04-11 19:59:00,448 - diff.py -  DEBUG - -> code[equal] old[1:86] new[1:86] 
2020-04-11 19:59:00,449 - diff.py -  DEBUG - copy old[84:86] new[1:86] 
2020-04-11 19:59:00,451 - diff.py -  DEBUG - -> code[replace] old[87:87] new[87:87] 
2020-04-11 19:59:00,452 - diff.py -  DEBUG - parse_part from 87 to 87 (to 86 in part parser) 
2020-04-11 19:59:00,452 - diff.py -  DEBUG - diff parser end 
2020-04-11 19:59:55,362 - diff.py -  DEBUG - diff parser start 
2020-04-11 19:59:55,363 - diff.py -  DEBUG - line_lengths old: 87; new: 87 
2020-04-11 19:59:55,364 - diff.py -  DEBUG - -> code[equal] old[1:86] new[1:86] 
2020-04-11 19:59:55,365 - diff.py -  DEBUG - copy old[84:86] new[1:86] 
2020-04-11 19:59:55,366 - diff.py -  DEBUG - -> code[replace] old[87:87] new[87:87] 
2020-04-11 19:59:55,367 - diff.py -  DEBUG - parse_part from 87 to 87 (to 86 in part parser) 
2020-04-11 19:59:55,368 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:00:01,259 - diff.py -  DEBUG - diff parser start 
2020-04-11 20:00:01,260 - diff.py -  DEBUG - line_lengths old: 87; new: 88 
2020-04-11 20:00:01,261 - diff.py -  DEBUG - -> code[equal] old[1:86] new[1:86] 
2020-04-11 20:00:01,263 - diff.py -  DEBUG - copy old[84:86] new[1:86] 
2020-04-11 20:00:01,264 - diff.py -  DEBUG - -> code[replace] old[87:87] new[87:88] 
2020-04-11 20:00:01,267 - diff.py -  DEBUG - parse_part from 87 to 88 (to 87 in part parser) 
2020-04-11 20:00:01,268 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:00:02,844 - diff.py -  DEBUG - diff parser start 
2020-04-11 20:00:02,845 - diff.py -  DEBUG - line_lengths old: 88; new: 88 
2020-04-11 20:00:02,846 - diff.py -  DEBUG - -> code[equal] old[1:87] new[1:87] 
2020-04-11 20:00:02,847 - diff.py -  DEBUG - copy old[84:87] new[1:87] 
2020-04-11 20:00:02,848 - diff.py -  DEBUG - -> code[replace] old[88:88] new[88:88] 
2020-04-11 20:00:02,849 - diff.py -  DEBUG - parse_part from 88 to 88 (to 87 in part parser) 
2020-04-11 20:00:02,849 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:00:02,979 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\__future__.py 
2020-04-11 20:00:46,953 - diff.py -  DEBUG - diff parser start 
2020-04-11 20:00:46,954 - diff.py -  DEBUG - line_lengths old: 88; new: 89 
2020-04-11 20:00:46,955 - diff.py -  DEBUG - -> code[equal] old[1:87] new[1:87] 
2020-04-11 20:00:46,956 - diff.py -  DEBUG - copy old[84:87] new[1:87] 
2020-04-11 20:00:46,957 - diff.py -  DEBUG - -> code[replace] old[88:88] new[88:89] 
2020-04-11 20:00:46,959 - diff.py -  DEBUG - parse_part from 88 to 89 (to 88 in part parser) 
2020-04-11 20:00:46,960 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:00:58,371 - diff.py -  DEBUG - diff parser start 
2020-04-11 20:00:58,372 - diff.py -  DEBUG - line_lengths old: 89; new: 90 
2020-04-11 20:00:58,373 - diff.py -  DEBUG - -> code[equal] old[1:88] new[1:88] 
2020-04-11 20:00:58,375 - diff.py -  DEBUG - copy old[84:88] new[1:88] 
2020-04-11 20:00:58,376 - diff.py -  DEBUG - -> code[replace] old[89:89] new[89:90] 
2020-04-11 20:00:58,377 - diff.py -  DEBUG - parse_part from 89 to 90 (to 89 in part parser) 
2020-04-11 20:00:58,378 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:01:13,973 - diff.py -  DEBUG - diff parser start 
2020-04-11 20:01:13,974 - diff.py -  DEBUG - line_lengths old: 90; new: 88 
2020-04-11 20:01:13,975 - diff.py -  DEBUG - -> code[equal] old[1:87] new[1:87] 
2020-04-11 20:01:13,977 - diff.py -  DEBUG - copy old[84:87] new[1:87] 
2020-04-11 20:01:13,978 - diff.py -  DEBUG - -> code[replace] old[88:90] new[88:88] 
2020-04-11 20:01:13,979 - diff.py -  DEBUG - parse_part from 88 to 88 (to 87 in part parser) 
2020-04-11 20:01:13,980 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:01:15,605 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:01:26,643 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=2, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:26,647 - connectionpool.py -  WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x10988760>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:26,649 - connectionpool.py -  DEBUG - Starting new HTTPS connection (2): www.mygov.in:443 
2020-04-11 20:01:26,653 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=1, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:26,654 - connectionpool.py -  WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108ECBB0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:26,655 - connectionpool.py -  DEBUG - Starting new HTTPS connection (3): www.mygov.in:443 
2020-04-11 20:01:26,656 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=0, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:26,657 - connectionpool.py -  WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108ECF10>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:26,658 - connectionpool.py -  DEBUG - Starting new HTTPS connection (4): www.mygov.in:443 
2020-04-11 20:01:40,411 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:01:40,413 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=2, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:40,414 - connectionpool.py -  WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x10341700>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:40,415 - connectionpool.py -  DEBUG - Starting new HTTPS connection (2): www.mygov.in:443 
2020-04-11 20:01:40,416 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=1, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:40,417 - connectionpool.py -  WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108ECD00>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:40,418 - connectionpool.py -  DEBUG - Starting new HTTPS connection (3): www.mygov.in:443 
2020-04-11 20:01:40,419 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=0, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:40,419 - connectionpool.py -  WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108EC760>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:40,420 - connectionpool.py -  DEBUG - Starting new HTTPS connection (4): www.mygov.in:443 
2020-04-11 20:01:45,227 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:01:56,261 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=2, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:56,263 - connectionpool.py -  WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108EC7F0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:56,265 - connectionpool.py -  DEBUG - Starting new HTTPS connection (2): www.mygov.in:443 
2020-04-11 20:01:56,270 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=1, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:56,272 - connectionpool.py -  WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108ECCA0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:56,275 - connectionpool.py -  DEBUG - Starting new HTTPS connection (3): www.mygov.in:443 
2020-04-11 20:01:56,278 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=0, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:01:56,282 - connectionpool.py -  WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108EC2E0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:01:56,286 - connectionpool.py -  DEBUG - Starting new HTTPS connection (4): www.mygov.in:443 
2020-04-11 20:02:04,243 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:02:04,245 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=2, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:02:04,246 - connectionpool.py -  WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x104800A0>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:02:04,247 - connectionpool.py -  DEBUG - Starting new HTTPS connection (2): www.mygov.in:443 
2020-04-11 20:02:04,249 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=1, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:02:04,250 - connectionpool.py -  WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108EC148>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:02:04,251 - connectionpool.py -  DEBUG - Starting new HTTPS connection (3): www.mygov.in:443 
2020-04-11 20:02:04,252 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=0, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:02:04,252 - connectionpool.py -  WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108DA898>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:02:04,253 - connectionpool.py -  DEBUG - Starting new HTTPS connection (4): www.mygov.in:443 
2020-04-11 20:02:09,895 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:02:15,275 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=2, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:02:15,276 - connectionpool.py -  WARNING - Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108EC298>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:02:15,277 - connectionpool.py -  DEBUG - Starting new HTTPS connection (2): www.mygov.in:443 
2020-04-11 20:02:15,278 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=1, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:02:15,279 - connectionpool.py -  WARNING - Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108EC1D8>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:02:15,280 - connectionpool.py -  DEBUG - Starting new HTTPS connection (3): www.mygov.in:443 
2020-04-11 20:02:15,282 - retry.py -  DEBUG - Incremented Retry for (url='/corona-data/covid19-statewise-status'): Retry(total=0, connect=None, read=None, redirect=None, status=None) 
2020-04-11 20:02:15,284 - connectionpool.py -  WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x108DA7D8>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed')': /corona-data/covid19-statewise-status 
2020-04-11 20:02:15,285 - connectionpool.py -  DEBUG - Starting new HTTPS connection (4): www.mygov.in:443 
2020-04-11 20:02:37,496 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:02:38,681 - connectionpool.py -  DEBUG - https://www.mygov.in:443 "GET /corona-data/covid19-statewise-status HTTP/1.1" 200 None 
2020-04-11 20:02:44,185 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:02:45,321 - connectionpool.py -  DEBUG - https://www.mygov.in:443 "GET /corona-data/covid19-statewise-status HTTP/1.1" 200 None 
2020-04-11 20:02:51,326 - diff.py -  DEBUG - diff parser start 
2020-04-11 20:02:51,327 - diff.py -  DEBUG - line_lengths old: 88; new: 90 
2020-04-11 20:02:51,328 - diff.py -  DEBUG - -> code[equal] old[1:87] new[1:87] 
2020-04-11 20:02:51,329 - diff.py -  DEBUG - copy old[84:87] new[1:87] 
2020-04-11 20:02:51,330 - diff.py -  DEBUG - -> code[replace] old[88:88] new[88:90] 
2020-04-11 20:02:51,332 - diff.py -  DEBUG - parse_part from 88 to 90 (to 89 in part parser) 
2020-04-11 20:02:51,333 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:02:51,802 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\typing.py 
2020-04-11 20:02:51,869 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\jedi\third_party\typeshed\stdlib\3\typing.pyi 
2020-04-11 20:02:52,628 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\types.py 
2020-04-11 20:02:52,767 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\jedi\third_party\typeshed\stdlib\3\types.pyi 
2020-04-11 20:02:53,701 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\abc.py 
2020-04-11 20:02:53,755 - cache.py -  DEBUG - pickle loaded: c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\jedi\third_party\typeshed\stdlib\3\abc.pyi 
2020-04-11 20:03:03,820 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:03:04,997 - connectionpool.py -  DEBUG - https://www.mygov.in:443 "GET /corona-data/covid19-statewise-status HTTP/1.1" 200 None 
2020-04-11 20:03:28,331 - diff.py -  DEBUG - diff parser start 
2020-04-11 20:03:28,332 - diff.py -  DEBUG - line_lengths old: 90; new: 92 
2020-04-11 20:03:28,332 - diff.py -  DEBUG - -> code[equal] old[1:89] new[1:89] 
2020-04-11 20:03:28,333 - diff.py -  DEBUG - copy old[84:89] new[1:89] 
2020-04-11 20:03:28,334 - diff.py -  DEBUG - -> code[replace] old[90:90] new[90:92] 
2020-04-11 20:03:28,336 - diff.py -  DEBUG - parse_part from 90 to 92 (to 91 in part parser) 
2020-04-11 20:03:28,336 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:03:35,049 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:03:36,268 - connectionpool.py -  DEBUG - https://www.mygov.in:443 "GET /corona-data/covid19-statewise-status HTTP/1.1" 200 None 
2020-04-11 20:05:19,183 - diff.py -  DEBUG - diff parser start 
2020-04-11 20:05:19,185 - diff.py -  DEBUG - line_lengths old: 92; new: 94 
2020-04-11 20:05:19,185 - diff.py -  DEBUG - -> code[equal] old[1:90] new[1:90] 
2020-04-11 20:05:19,186 - diff.py -  DEBUG - copy old[84:89] new[1:89] 
2020-04-11 20:05:19,188 - diff.py -  DEBUG - parse_part from 90 to 91 (to 91 in part parser) 
2020-04-11 20:05:19,189 - diff.py -  DEBUG - -> code[replace] old[91:92] new[91:94] 
2020-04-11 20:05:19,190 - diff.py -  DEBUG - parse_part from 92 to 94 (to 93 in part parser) 
2020-04-11 20:05:19,192 - diff.py -  DEBUG - diff parser end 
2020-04-11 20:05:19,861 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:05:21,047 - connectionpool.py -  DEBUG - https://www.mygov.in:443 "GET /corona-data/covid19-statewise-status HTTP/1.1" 200 None 
2020-04-11 20:05:52,315 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mygov.in:443 
2020-04-11 20:05:53,404 - connectionpool.py -  DEBUG - https://www.mygov.in:443 "GET /corona-data/covid19-statewise-status HTTP/1.1" 200 None 
2020-04-11 20:09:27,754 - <ipython-input-41-05f4855eddde> -  INFO - Execution begins  
2020-04-11 20:09:27,884 - <ipython-input-41-05f4855eddde> -  DEBUG - The file already exists. 
2020-04-11 20:09:27,983 - <ipython-input-41-05f4855eddde> -  INFO - Execution sucessfully completed 
2020-04-11 20:09:42,205 - <ipython-input-42-05f4855eddde> -  INFO - Execution begins  
2020-04-11 20:09:42,293 - <ipython-input-42-05f4855eddde> -  DEBUG - The file already exists. 
2020-04-11 20:09:42,296 - <ipython-input-42-05f4855eddde> -  INFO - Execution sucessfully completed 
2020-04-11 20:09:57,114 - <ipython-input-43-f4b0ce3a6cd1> -  INFO - Execution begins  
2020-04-11 20:09:57,292 - <ipython-input-43-f4b0ce3a6cd1> -  ERROR - Error in extraction of the table from website - https://data.gov.in/major-indicator/covid-19-india-data-source-mohfw 
Traceback (most recent call last):
  File "<ipython-input-43-f4b0ce3a6cd1>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 891, in _parse
    parser = _parser_dispatch(flav)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 840, in _parser_dispatch
    raise ImportError("html5lib not found, please install it")
ImportError: html5lib not found, please install it
2020-04-11 20:09:57,293 - <ipython-input-43-f4b0ce3a6cd1> -  DEBUG - The file already exists. 
2020-04-11 20:09:57,295 - <ipython-input-43-f4b0ce3a6cd1> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-43-f4b0ce3a6cd1>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 20:09:57,295 - <ipython-input-43-f4b0ce3a6cd1> -  INFO - Execution sucessfully completed 
2020-04-11 20:10:02,466 - <ipython-input-44-f4b0ce3a6cd1> -  INFO - Execution begins  
2020-04-11 20:10:02,616 - <ipython-input-44-f4b0ce3a6cd1> -  ERROR - Error in extraction of the table from website - https://data.gov.in/major-indicator/covid-19-india-data-source-mohfw 
Traceback (most recent call last):
  File "<ipython-input-44-f4b0ce3a6cd1>", line 24, in extract_website_data
    table_list = pd.read_html(url)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 1085, in read_html
    return _parse(
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 891, in _parse
    parser = _parser_dispatch(flav)
  File "c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\pandas\io\html.py", line 840, in _parser_dispatch
    raise ImportError("html5lib not found, please install it")
ImportError: html5lib not found, please install it
2020-04-11 20:10:02,617 - <ipython-input-44-f4b0ce3a6cd1> -  DEBUG - The file already exists. 
2020-04-11 20:10:02,618 - <ipython-input-44-f4b0ce3a6cd1> -  ERROR - Error occured in storing the extracted data 
Traceback (most recent call last):
  File "<ipython-input-44-f4b0ce3a6cd1>", line 67, in store_extracted_data
    corona_table.to_csv(filename, index=False, sep=',', header=header_required, mode='a')
AttributeError: 'NoneType' object has no attribute 'to_csv'
2020-04-11 20:10:02,619 - <ipython-input-44-f4b0ce3a6cd1> -  INFO - Execution sucessfully completed 
2020-04-11 20:10:16,997 - <ipython-input-45-f833aea3bbbb> -  INFO - Execution begins  
2020-04-11 20:10:17,115 - <ipython-input-45-f833aea3bbbb> -  DEBUG - The file already exists. 
2020-04-11 20:10:17,118 - <ipython-input-45-f833aea3bbbb> -  INFO - Execution sucessfully completed 
2020-04-11 20:12:34,511 - __init__.py -  DEBUG - CONFIGDIR=C:\Users\abhid\.matplotlib 
2020-04-11 20:12:34,513 - __init__.py -  DEBUG - (private) matplotlib data path: c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\matplotlib\mpl-data 
2020-04-11 20:12:34,523 - __init__.py -  DEBUG - matplotlib data path: c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\matplotlib\mpl-data 
2020-04-11 20:12:34,524 - __init__.py -  DEBUG - loaded rc file c:\users\abhid\appdata\local\programs\python\python38-32\lib\site-packages\matplotlib\mpl-data\matplotlibrc 
2020-04-11 20:12:34,527 - __init__.py -  DEBUG - matplotlib version 3.2.1 
2020-04-11 20:12:34,528 - __init__.py -  DEBUG - interactive is False 
2020-04-11 20:12:34,529 - __init__.py -  DEBUG - platform is win32 
2020-04-11 20:12:34,530 - __init__.py -  DEBUG - loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_bootstrap', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'msvcrt', '_winapi', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'posixpath', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', 'collections.abc', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_opcode', 'opcode', 'dis', 'inspect', '_struct', 'struct', 'six', 'traitlets.utils', 'traitlets.utils.getargspec', 'ipython_genutils._version', 'ipython_genutils', 'locale', 'ipython_genutils.encoding', 'platform', 'ipython_genutils.py3compat', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.traitlets', 'traitlets._version', 'traitlets', 'decorator', 'gettext', 'argparse', '_ast', 'ast', 'math', '_bisect', 'bisect', '_sha512', '_random', 'random', 'ipython_genutils.path', 'traitlets.config.loader', 'textwrap', 'ipython_genutils.text', 'traitlets.config.configurable', 'ipython_genutils.importstring', 'traitlets.config.application', 'traitlets.config', 'pprint', 'sysconfig', 'urllib', 'urllib.parse', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_win32', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'typing.io', 'typing.re', 'typing', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'IPython.core.magic', '_compat_pickle', '_pickle', 'pickle', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'select', 'selectors', 'socket', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi.file_io', '_queue', 'queue', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.common.value', 'jedi.common', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common.utils', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.inference.compiled.mixed', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.api.project', 'jedi.inference.references', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.lib.clipboard', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'jupyter_client._version', 'zmq.libzmq', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_15', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'distutils', 'distutils.errors', 'distutils.dep_util', 'distutils.debug', 'distutils.log', 'distutils.spawn', 'distutils.util', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'numbers', 'logging.handlers', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'win32api', 'win32security', 'ntsecuritycon', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'numpy.random._common', 'secrets', 'numpy.random._bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'pandas.compat', 'pandas.compat.numpy', '_cython_0_29_13', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs', 'pandas._libs', 'pandas._libs.hashtable', 'fractions', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.dtypes', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._typing', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.dtypes.missing', 'pandas._libs.properties', 'pandas.util._decorators', 'pandas.core.util', 'pandas._libs.hashing', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.util.hashing', 'pandas.util', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas._libs.ops', 'pandas.core.ops.roperator', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'dateutil.easter', 'pandas.tseries.offsets', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.datetimes', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.io.formats.printing', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.core.indexes.datetimes', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.blocks', 'pandas.core.internals.concat', 'pandas.core.internals.managers', 'pandas.core.internals', 'gzip', 'mmap', 'zipfile', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.generic', 'pandas.core.internals.construction', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.groupby.base', 'pandas.core.window.common', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.series', 'pandas.core.frame', 'pandas._libs.groupby', 'pandas._libs.reduction', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.engines', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.util', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', '_csv', 'csv', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.api', 'pandas.util._tester', 'pandas._libs.testing', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'soupsieve.__meta__', 'soupsieve.util', 'soupsieve.css_types', 'soupsieve.css_match', 'soupsieve.css_parser', 'soupsieve', 'chardet.compat', 'chardet.enums', 'chardet.charsetprober', 'chardet.charsetgroupprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.escprober', 'chardet.latin1prober', 'chardet.mbcssm', 'chardet.utf8prober', 'chardet.mbcharsetprober', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.chardistribution', 'chardet.jpcntx', 'chardet.sjisprober', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.mbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.sbcsgroupprober', 'chardet.universaldetector', 'chardet.version', 'chardet', 'bs4.dammit', 'bs4.formatter', 'bs4.element', '_markupbase', 'html.parser', 'bs4.builder._htmlparser', 'lxml', '_cython_0_29_14', 'lxml._elementpath', 'lxml.etree', 'bs4.builder._lxml', 'bs4.builder', 'bs4', 'lxml.html.defs', 'lxml.html._setmixin', 'lxml.html', 'stringprep', 'encodings.idna', 'pandas.io.formats.csvs', 'jedi.inference.finder', 'jedi.inference.star_args', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.url', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3.util', 'urllib3._collections', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'jedi.inference.dynamic_params', 'zmq.utils.garbage', 'seaborn', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver'] 
2020-04-11 20:12:39,455 - __init__.py -  DEBUG - CACHEDIR=C:\Users\abhid\.matplotlib 
2020-04-11 20:12:39,467 - font_manager.py -  DEBUG - Using fontManager instance from C:\Users\abhid\.matplotlib\fontlist-v310.json 
2020-04-11 20:12:40,278 - pyplot.py -  DEBUG - Loaded backend module://ipykernel.pylab.backend_inline version unknown. 
2020-04-11 20:12:40,281 - pyplot.py -  DEBUG - Loaded backend module://ipykernel.pylab.backend_inline version unknown. 
2020-04-11 20:14:01,222 - connectionpool.py -  DEBUG - Starting new HTTPS connection (1): www.mohfw.gov.in:443 
2020-04-11 20:14:02,491 - connectionpool.py -  DEBUG - https://www.mohfw.gov.in:443 "GET / HTTP/1.1" 200 16503 
2020-04-11 20:14:03,177 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0. 
2020-04-11 20:14:03,178 - font_manager.py -  DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,180 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,181 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05 
2020-04-11 20:14:03,183 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,185 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,186 - font_manager.py -  DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,188 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,189 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,191 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,192 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335 
2020-04-11 20:14:03,194 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,196 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,197 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,199 - font_manager.py -  DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,200 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335 
2020-04-11 20:14:03,200 - font_manager.py -  DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,201 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,202 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,203 - font_manager.py -  DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,203 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,204 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,205 - font_manager.py -  DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,206 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,207 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,208 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,209 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,210 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,211 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,212 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,213 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05 
2020-04-11 20:14:03,213 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,214 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,215 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05 
2020-04-11 20:14:03,216 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,216 - font_manager.py -  DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,217 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,218 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335 
2020-04-11 20:14:03,219 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,220 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,220 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535 
2020-04-11 20:14:03,221 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,221 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,222 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,223 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145 
2020-04-11 20:14:03,223 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24 
2020-04-11 20:14:03,225 - font_manager.py -  DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,227 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,228 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,232 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,233 - font_manager.py -  DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,233 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,234 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25 
2020-04-11 20:14:03,235 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,235 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,237 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,237 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,238 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,238 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,239 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,239 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,240 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,241 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,242 - font_manager.py -  DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,243 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,243 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,244 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,244 - font_manager.py -  DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,245 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,246 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,246 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,247 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,247 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24 
2020-04-11 20:14:03,248 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,248 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,249 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335 
2020-04-11 20:14:03,249 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,250 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,251 - font_manager.py -  DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,251 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,252 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,252 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,253 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,253 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,254 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,254 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,255 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25 
2020-04-11 20:14:03,255 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,256 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525 
2020-04-11 20:14:03,257 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,257 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,258 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,258 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,259 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,260 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,266 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,267 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145 
2020-04-11 20:14:03,267 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,268 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,268 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,269 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,270 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,270 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,271 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,272 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,272 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,273 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,273 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,274 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,274 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,275 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,276 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,276 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,277 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,277 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,279 - font_manager.py -  DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,279 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,280 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,281 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,282 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999 
2020-04-11 20:14:03,282 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,283 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,284 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,285 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,287 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,288 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,289 - font_manager.py -  DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,290 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,290 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,291 - font_manager.py -  DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,292 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,293 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,294 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,294 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,295 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145 
2020-04-11 20:14:03,296 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,297 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,298 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996 
2020-04-11 20:14:03,298 - font_manager.py -  DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,299 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,300 - font_manager.py -  DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,301 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,301 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,302 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,303 - font_manager.py -  DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,304 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,305 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,305 - font_manager.py -  DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,306 - font_manager.py -  DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,308 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525 
2020-04-11 20:14:03,308 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,309 - font_manager.py -  DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,310 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:03,311 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,311 - font_manager.py -  DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,312 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,313 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,314 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,314 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05 
2020-04-11 20:14:03,315 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,316 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,317 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,318 - font_manager.py -  DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,318 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 0.525 
2020-04-11 20:14:03,319 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05 
2020-04-11 20:14:03,319 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,320 - font_manager.py -  DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,321 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,322 - font_manager.py -  DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,323 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,323 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,324 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,325 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,325 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,326 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,327 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,327 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,328 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,329 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:03,330 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,330 - font_manager.py -  DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,332 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,333 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,334 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,335 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,336 - font_manager.py -  DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,337 - font_manager.py -  DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,337 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,338 - font_manager.py -  DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,339 - font_manager.py -  DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,339 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,341 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,342 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,343 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,344 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,344 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,345 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,346 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,347 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,348 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,349 - font_manager.py -  DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,350 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,350 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,351 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,352 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,353 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,354 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,354 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,355 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,356 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,356 - font_manager.py -  DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,357 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,358 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,359 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,360 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,361 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,361 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,362 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,363 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,363 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,364 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,366 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,366 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,367 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,367 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,368 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,369 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,370 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,371 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000. 
2020-04-11 20:14:03,407 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0. 
2020-04-11 20:14:03,408 - font_manager.py -  DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,409 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,410 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05 
2020-04-11 20:14:03,411 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,412 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,412 - font_manager.py -  DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,413 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,414 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,415 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,415 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335 
2020-04-11 20:14:03,416 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,417 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,418 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,418 - font_manager.py -  DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,419 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335 
2020-04-11 20:14:03,421 - font_manager.py -  DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,421 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,422 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,423 - font_manager.py -  DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,424 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,425 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,425 - font_manager.py -  DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,426 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,426 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,427 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,427 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,428 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,429 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,430 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,430 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05 
2020-04-11 20:14:03,431 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,431 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,432 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05 
2020-04-11 20:14:03,432 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,433 - font_manager.py -  DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,434 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,434 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335 
2020-04-11 20:14:03,435 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,435 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,436 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535 
2020-04-11 20:14:03,436 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,437 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,438 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,438 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145 
2020-04-11 20:14:03,439 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24 
2020-04-11 20:14:03,439 - font_manager.py -  DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,440 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,440 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,441 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,446 - font_manager.py -  DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,447 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,448 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25 
2020-04-11 20:14:03,449 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,449 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,450 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,450 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,452 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,453 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,453 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,455 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,455 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,456 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,457 - font_manager.py -  DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,458 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,459 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,459 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,460 - font_manager.py -  DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,461 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,461 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,462 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,462 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,463 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24 
2020-04-11 20:14:03,466 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,466 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,467 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335 
2020-04-11 20:14:03,468 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,468 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,469 - font_manager.py -  DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,470 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,471 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,472 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,473 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,473 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,474 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,475 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,477 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25 
2020-04-11 20:14:03,478 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,479 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525 
2020-04-11 20:14:03,479 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,480 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,480 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,481 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,482 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,483 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,484 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,484 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145 
2020-04-11 20:14:03,486 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,487 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,488 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,489 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,490 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,490 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,491 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,492 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,492 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,494 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,495 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,496 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,496 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,497 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,498 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,498 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,499 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,500 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,500 - font_manager.py -  DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,501 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,501 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,502 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,503 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999 
2020-04-11 20:14:03,504 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,504 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,506 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,507 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,508 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,508 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,509 - font_manager.py -  DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,510 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,510 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,511 - font_manager.py -  DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,511 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,512 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,513 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,513 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,514 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145 
2020-04-11 20:14:03,514 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,515 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,516 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996 
2020-04-11 20:14:03,516 - font_manager.py -  DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,517 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,517 - font_manager.py -  DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,518 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,518 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,519 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,520 - font_manager.py -  DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,520 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,521 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,521 - font_manager.py -  DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,522 - font_manager.py -  DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,522 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525 
2020-04-11 20:14:03,523 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,524 - font_manager.py -  DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,524 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:03,525 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,525 - font_manager.py -  DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,526 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,526 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,526 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,527 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05 
2020-04-11 20:14:03,527 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,528 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,528 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,529 - font_manager.py -  DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,529 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 0.525 
2020-04-11 20:14:03,530 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05 
2020-04-11 20:14:03,531 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,531 - font_manager.py -  DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,532 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,532 - font_manager.py -  DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,533 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,533 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,534 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,534 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,535 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,535 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,536 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,537 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,537 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,538 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:03,538 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,539 - font_manager.py -  DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,539 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,540 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,540 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,541 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,542 - font_manager.py -  DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,542 - font_manager.py -  DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,543 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,543 - font_manager.py -  DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,544 - font_manager.py -  DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,544 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,545 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,545 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,546 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,546 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,547 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,547 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,548 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,549 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,549 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,550 - font_manager.py -  DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,550 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,551 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,552 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,552 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,553 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,554 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,554 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,555 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,555 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,556 - font_manager.py -  DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,556 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,557 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,558 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,558 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,559 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,559 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,560 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,560 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,561 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,561 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,562 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,562 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,563 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,564 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,564 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,565 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,565 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,566 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000. 
2020-04-11 20:14:03,584 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0. 
2020-04-11 20:14:03,590 - font_manager.py -  DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,591 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,591 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05 
2020-04-11 20:14:03,592 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,592 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,593 - font_manager.py -  DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,593 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,594 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,594 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,595 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335 
2020-04-11 20:14:03,596 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,600 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,601 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,601 - font_manager.py -  DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,602 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335 
2020-04-11 20:14:03,602 - font_manager.py -  DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,603 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,604 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,605 - font_manager.py -  DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,606 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,606 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,607 - font_manager.py -  DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,608 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,609 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,609 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,610 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,610 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,611 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,612 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,612 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05 
2020-04-11 20:14:03,613 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,613 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,614 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05 
2020-04-11 20:14:03,615 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,615 - font_manager.py -  DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,618 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,619 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335 
2020-04-11 20:14:03,619 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,620 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,621 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535 
2020-04-11 20:14:03,621 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,622 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,622 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,623 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145 
2020-04-11 20:14:03,624 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24 
2020-04-11 20:14:03,626 - font_manager.py -  DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,627 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,627 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,628 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,629 - font_manager.py -  DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,630 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,631 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25 
2020-04-11 20:14:03,632 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,633 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,634 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,634 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,635 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,636 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,637 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,638 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,638 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,639 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,640 - font_manager.py -  DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,641 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,642 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,643 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,644 - font_manager.py -  DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,644 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,645 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,646 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,646 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,647 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24 
2020-04-11 20:14:03,648 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,648 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,649 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335 
2020-04-11 20:14:03,650 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,650 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,651 - font_manager.py -  DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,651 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,652 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,653 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,653 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,654 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,654 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,655 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,655 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25 
2020-04-11 20:14:03,656 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,656 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525 
2020-04-11 20:14:03,657 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,658 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,661 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,662 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,663 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,663 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,664 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,665 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145 
2020-04-11 20:14:03,665 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,666 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,667 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,668 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,668 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,669 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,670 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,670 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,671 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,672 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,672 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,673 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,674 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,675 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,676 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,677 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,678 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,679 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,680 - font_manager.py -  DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,680 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,681 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,682 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,682 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999 
2020-04-11 20:14:03,683 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,684 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,684 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,685 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,686 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,687 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,687 - font_manager.py -  DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,688 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,689 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,689 - font_manager.py -  DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,690 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,692 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,692 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,693 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,694 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145 
2020-04-11 20:14:03,695 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,696 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,697 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996 
2020-04-11 20:14:03,697 - font_manager.py -  DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,698 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,699 - font_manager.py -  DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,699 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,701 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,702 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,702 - font_manager.py -  DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,703 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,704 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,705 - font_manager.py -  DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,706 - font_manager.py -  DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,707 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525 
2020-04-11 20:14:03,708 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,708 - font_manager.py -  DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,709 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:03,709 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,711 - font_manager.py -  DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,712 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,713 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,713 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,715 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05 
2020-04-11 20:14:03,715 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,716 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,717 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,718 - font_manager.py -  DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,719 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 0.525 
2020-04-11 20:14:03,719 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05 
2020-04-11 20:14:03,720 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,721 - font_manager.py -  DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,722 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,723 - font_manager.py -  DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,724 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,725 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,725 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,726 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,726 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,727 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,728 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,729 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,730 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,731 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:03,731 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,732 - font_manager.py -  DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,732 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,733 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,734 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,735 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,736 - font_manager.py -  DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,737 - font_manager.py -  DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,738 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,738 - font_manager.py -  DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,739 - font_manager.py -  DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,740 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,741 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,741 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,742 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,743 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,743 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,744 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,745 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,745 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,746 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,747 - font_manager.py -  DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,748 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,749 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,749 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,750 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,750 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,751 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,752 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,752 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,753 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,754 - font_manager.py -  DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,755 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,755 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,756 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,756 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,757 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,758 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,758 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,759 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,760 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,760 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,762 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,762 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,763 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,763 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,764 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,764 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,765 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,765 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000. 
2020-04-11 20:14:03,807 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0. 
2020-04-11 20:14:03,809 - font_manager.py -  DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,809 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,810 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05 
2020-04-11 20:14:03,811 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,812 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,812 - font_manager.py -  DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,813 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,814 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,815 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,815 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335 
2020-04-11 20:14:03,816 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,816 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,817 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,818 - font_manager.py -  DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,819 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335 
2020-04-11 20:14:03,820 - font_manager.py -  DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,821 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,821 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,822 - font_manager.py -  DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,823 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,823 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,824 - font_manager.py -  DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,824 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,826 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,826 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,827 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,828 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,828 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,829 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,830 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05 
2020-04-11 20:14:03,831 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,831 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,832 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05 
2020-04-11 20:14:03,832 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,834 - font_manager.py -  DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,834 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,835 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335 
2020-04-11 20:14:03,836 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,837 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,837 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535 
2020-04-11 20:14:03,838 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,838 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,839 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,839 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145 
2020-04-11 20:14:03,840 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24 
2020-04-11 20:14:03,841 - font_manager.py -  DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,842 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,843 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,843 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,844 - font_manager.py -  DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,845 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,845 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25 
2020-04-11 20:14:03,847 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,848 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,848 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,849 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,849 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,851 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,852 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,852 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,853 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,854 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,854 - font_manager.py -  DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,856 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,856 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,857 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,858 - font_manager.py -  DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,858 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,859 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,860 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,860 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,861 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24 
2020-04-11 20:14:03,862 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,862 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,864 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335 
2020-04-11 20:14:03,864 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,865 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,865 - font_manager.py -  DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,866 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,867 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,868 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,868 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,869 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,869 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,870 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,871 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25 
2020-04-11 20:14:03,872 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,873 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525 
2020-04-11 20:14:03,874 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,875 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,875 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,876 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,877 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,878 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,879 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,880 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145 
2020-04-11 20:14:03,881 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,881 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,882 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,883 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,884 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,885 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,885 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,886 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,887 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,888 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,889 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,889 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,890 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,891 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,892 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,892 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,893 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,894 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,894 - font_manager.py -  DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,895 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,895 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,897 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,898 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999 
2020-04-11 20:14:03,899 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,900 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,900 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,900 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,901 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,901 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,902 - font_manager.py -  DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,903 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,903 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,905 - font_manager.py -  DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,905 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,906 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,907 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,908 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:03,909 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145 
2020-04-11 20:14:03,910 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,911 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,911 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996 
2020-04-11 20:14:03,912 - font_manager.py -  DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,913 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,913 - font_manager.py -  DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,914 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,915 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,916 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,917 - font_manager.py -  DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,917 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,918 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,918 - font_manager.py -  DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,919 - font_manager.py -  DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,920 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525 
2020-04-11 20:14:03,921 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,921 - font_manager.py -  DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,922 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:03,923 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05 
2020-04-11 20:14:03,923 - font_manager.py -  DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,924 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,925 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,926 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,926 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05 
2020-04-11 20:14:03,927 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,928 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,929 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,929 - font_manager.py -  DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,931 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 0.525 
2020-04-11 20:14:03,931 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05 
2020-04-11 20:14:03,932 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,932 - font_manager.py -  DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,933 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,934 - font_manager.py -  DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,934 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145 
2020-04-11 20:14:03,935 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,936 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,937 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,938 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,939 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,939 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,940 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,941 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,942 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:03,943 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,944 - font_manager.py -  DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,944 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,945 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,945 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,946 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,947 - font_manager.py -  DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,948 - font_manager.py -  DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,949 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,950 - font_manager.py -  DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,950 - font_manager.py -  DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,951 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,951 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,952 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,953 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,954 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,954 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,955 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,955 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,956 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,958 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,958 - font_manager.py -  DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,959 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,960 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,961 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,962 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,963 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:03,963 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,964 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,965 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,965 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,966 - font_manager.py -  DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,966 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,967 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,967 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,968 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,969 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,969 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,970 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,971 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,971 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,973 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,974 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:03,974 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,976 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:03,976 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:03,977 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:03,978 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,979 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:03,980 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000. 
2020-04-11 20:14:04,478 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0. 
2020-04-11 20:14:04,479 - font_manager.py -  DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,480 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,480 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05 
2020-04-11 20:14:04,481 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,482 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,483 - font_manager.py -  DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,484 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,485 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,486 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,487 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335 
2020-04-11 20:14:04,488 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,489 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,489 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,490 - font_manager.py -  DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,491 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335 
2020-04-11 20:14:04,492 - font_manager.py -  DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,493 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,494 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,494 - font_manager.py -  DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,495 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,495 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,496 - font_manager.py -  DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,497 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,497 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,498 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,498 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,499 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,500 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,500 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,501 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05 
2020-04-11 20:14:04,501 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,502 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,502 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05 
2020-04-11 20:14:04,503 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,504 - font_manager.py -  DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,505 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,505 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335 
2020-04-11 20:14:04,506 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,507 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,510 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535 
2020-04-11 20:14:04,510 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,511 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,511 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,512 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145 
2020-04-11 20:14:04,513 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24 
2020-04-11 20:14:04,514 - font_manager.py -  DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,514 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,515 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,516 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,517 - font_manager.py -  DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,517 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,518 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25 
2020-04-11 20:14:04,518 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,519 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,519 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,520 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,520 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,521 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:04,522 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,522 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,523 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,524 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,524 - font_manager.py -  DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,525 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,525 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,526 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,527 - font_manager.py -  DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,527 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,528 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,528 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,529 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,529 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24 
2020-04-11 20:14:04,530 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,531 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145 
2020-04-11 20:14:04,531 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335 
2020-04-11 20:14:04,532 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,532 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,533 - font_manager.py -  DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,533 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,534 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,534 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,535 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,536 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,536 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,537 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,537 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25 
2020-04-11 20:14:04,538 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,539 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525 
2020-04-11 20:14:04,540 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,540 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,541 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,542 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,542 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,543 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,543 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,544 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145 
2020-04-11 20:14:04,544 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,545 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,545 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,546 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,547 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,548 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,549 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,550 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,551 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,551 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,552 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,552 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,553 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,553 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,555 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,555 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,556 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,556 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,557 - font_manager.py -  DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,558 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,558 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,559 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,560 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999 
2020-04-11 20:14:04,561 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,562 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:04,562 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,563 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,563 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,564 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,564 - font_manager.py -  DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,565 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,565 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,566 - font_manager.py -  DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,566 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,567 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,567 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,568 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:04,569 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145 
2020-04-11 20:14:04,569 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145 
2020-04-11 20:14:04,570 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,570 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996 
2020-04-11 20:14:04,571 - font_manager.py -  DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,572 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,572 - font_manager.py -  DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,573 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,573 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,574 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,575 - font_manager.py -  DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,576 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,577 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,578 - font_manager.py -  DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,578 - font_manager.py -  DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,579 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525 
2020-04-11 20:14:04,579 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,580 - font_manager.py -  DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,580 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:04,581 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,581 - font_manager.py -  DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,582 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,582 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,583 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,583 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05 
2020-04-11 20:14:04,584 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,584 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,585 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,585 - font_manager.py -  DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,586 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 0.525 
2020-04-11 20:14:04,587 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05 
2020-04-11 20:14:04,587 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,588 - font_manager.py -  DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,589 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,589 - font_manager.py -  DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,590 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145 
2020-04-11 20:14:04,590 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,591 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,592 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,593 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,594 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,594 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,595 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,596 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,597 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:04,597 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,598 - font_manager.py -  DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,599 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,600 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,601 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,603 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,604 - font_manager.py -  DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,606 - font_manager.py -  DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,607 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,608 - font_manager.py -  DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,608 - font_manager.py -  DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,610 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,611 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,612 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,613 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,614 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,615 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,616 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,616 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,617 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,618 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,618 - font_manager.py -  DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,619 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,620 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,620 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,621 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,621 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,624 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,625 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,627 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,628 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,629 - font_manager.py -  DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,629 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,630 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,630 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,631 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,631 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,632 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,632 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,633 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,633 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,634 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,634 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,635 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,635 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,636 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,637 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,637 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,638 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,639 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000. 
2020-04-11 20:14:04,646 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0. 
2020-04-11 20:14:04,648 - font_manager.py -  DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,649 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,649 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05 
2020-04-11 20:14:04,650 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,651 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,651 - font_manager.py -  DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,652 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,653 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,654 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,654 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335 
2020-04-11 20:14:04,655 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,655 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,656 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,657 - font_manager.py -  DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,658 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335 
2020-04-11 20:14:04,660 - font_manager.py -  DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,661 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,661 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,662 - font_manager.py -  DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,663 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,664 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,664 - font_manager.py -  DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,665 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,666 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,667 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,668 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,668 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,671 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,673 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,675 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05 
2020-04-11 20:14:04,676 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,677 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,679 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05 
2020-04-11 20:14:04,679 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,680 - font_manager.py -  DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,681 - font_manager.py -  DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,682 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335 
2020-04-11 20:14:04,683 - font_manager.py -  DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,684 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,684 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal 700 condensed>) = 1.535 
2020-04-11 20:14:04,685 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,686 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,688 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,689 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145 
2020-04-11 20:14:04,689 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24 
2020-04-11 20:14:04,690 - font_manager.py -  DEBUG - findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,691 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,692 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,693 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,694 - font_manager.py -  DEBUG - findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,695 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,695 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 1.25 
2020-04-11 20:14:04,696 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,696 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,697 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,697 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,698 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,698 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:04,699 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,699 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,700 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,700 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,701 - font_manager.py -  DEBUG - findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,701 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,702 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,703 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,704 - font_manager.py -  DEBUG - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,704 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,706 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,706 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,707 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,708 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24 
2020-04-11 20:14:04,710 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,711 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145 
2020-04-11 20:14:04,711 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 1.335 
2020-04-11 20:14:04,712 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,712 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,713 - font_manager.py -  DEBUG - findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,713 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,714 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,715 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,715 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,716 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,716 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,717 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,718 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 0.25 
2020-04-11 20:14:04,718 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,721 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525 
2020-04-11 20:14:04,721 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,724 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,724 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,726 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,726 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,727 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,728 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,728 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145 
2020-04-11 20:14:04,729 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,729 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,730 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,730 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,731 - font_manager.py -  DEBUG - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,732 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,732 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,733 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,734 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,734 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,735 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,736 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,737 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,737 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,739 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,740 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,741 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,742 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,743 - font_manager.py -  DEBUG - findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,744 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,745 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,745 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,746 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal 700 condensed>) = 0.5349999999999999 
2020-04-11 20:14:04,747 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,747 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:04,750 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,751 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,751 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,752 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,753 - font_manager.py -  DEBUG - findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,754 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,754 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,755 - font_manager.py -  DEBUG - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,756 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,758 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,759 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,760 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05 
2020-04-11 20:14:04,761 - font_manager.py -  DEBUG - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145 
2020-04-11 20:14:04,761 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145 
2020-04-11 20:14:04,762 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,762 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 0.33499999999999996 
2020-04-11 20:14:04,763 - font_manager.py -  DEBUG - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,764 - font_manager.py -  DEBUG - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,764 - font_manager.py -  DEBUG - findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,765 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,765 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,766 - font_manager.py -  DEBUG - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,767 - font_manager.py -  DEBUG - findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,767 - font_manager.py -  DEBUG - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,768 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,768 - font_manager.py -  DEBUG - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,769 - font_manager.py -  DEBUG - findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,769 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525 
2020-04-11 20:14:04,774 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,776 - font_manager.py -  DEBUG - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,777 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:04,777 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05 
2020-04-11 20:14:04,778 - font_manager.py -  DEBUG - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,778 - font_manager.py -  DEBUG - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,779 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,779 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,780 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 1.05 
2020-04-11 20:14:04,781 - font_manager.py -  DEBUG - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,781 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,782 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,782 - font_manager.py -  DEBUG - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,783 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 0.525 
2020-04-11 20:14:04,784 - font_manager.py -  DEBUG - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 0.05 
2020-04-11 20:14:04,784 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,785 - font_manager.py -  DEBUG - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,786 - font_manager.py -  DEBUG - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,787 - font_manager.py -  DEBUG - findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,788 - font_manager.py -  DEBUG - findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145 
2020-04-11 20:14:04,788 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,789 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,790 - font_manager.py -  DEBUG - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,791 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,792 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,793 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,794 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,795 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,796 - font_manager.py -  DEBUG - findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05 
2020-04-11 20:14:04,798 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,799 - font_manager.py -  DEBUG - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,800 - font_manager.py -  DEBUG - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,801 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,802 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,804 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,806 - font_manager.py -  DEBUG - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,807 - font_manager.py -  DEBUG - findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,807 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,808 - font_manager.py -  DEBUG - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,809 - font_manager.py -  DEBUG - findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,810 - font_manager.py -  DEBUG - findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,811 - font_manager.py -  DEBUG - findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,813 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,814 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,814 - font_manager.py -  DEBUG - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,815 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,816 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,816 - font_manager.py -  DEBUG - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,817 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,819 - font_manager.py -  DEBUG - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,820 - font_manager.py -  DEBUG - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,820 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,821 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,822 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,822 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,823 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24 
2020-04-11 20:14:04,823 - font_manager.py -  DEBUG - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,824 - font_manager.py -  DEBUG - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,825 - font_manager.py -  DEBUG - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,827 - font_manager.py -  DEBUG - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,828 - font_manager.py -  DEBUG - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,828 - font_manager.py -  DEBUG - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,829 - font_manager.py -  DEBUG - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,829 - font_manager.py -  DEBUG - findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,830 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,831 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,831 - font_manager.py -  DEBUG - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,832 - font_manager.py -  DEBUG - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,833 - font_manager.py -  DEBUG - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,833 - font_manager.py -  DEBUG - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,834 - font_manager.py -  DEBUG - findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,834 - font_manager.py -  DEBUG - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24 
2020-04-11 20:14:04,835 - font_manager.py -  DEBUG - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,836 - font_manager.py -  DEBUG - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335 
2020-04-11 20:14:04,836 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05 
2020-04-11 20:14:04,837 - font_manager.py -  DEBUG - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335 
2020-04-11 20:14:04,837 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,838 - font_manager.py -  DEBUG - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05 
2020-04-11 20:14:04,838 - font_manager.py -  DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to Arial ('C:\\Windows\\Fonts\\arial.ttf') with score of 0.050000. 
